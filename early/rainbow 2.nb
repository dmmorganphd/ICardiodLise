(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    131586,       2650]
NotebookOptionsPosition[    127870,       2590]
NotebookOutlinePosition[    128469,       2611]
CellTagsIndexPosition[    128426,       2608]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzsvQeYVEXWxz1+u6+iCMi6KrAGVFAwIGYWE0HERUTEgIiCgKCiBEkKZoKu
ElwEwQCoCIqiSFYEJEcJCyiiSFglqIthXX13Zbr7fr/v/p97vprumZ6GSehb
/+eZfu5031u3wqk6/3Oq6tSJbbs06/D/ZGVldS/FR7M299Xt1q1N7+uO4J8b
One/647O7W//S+ce7e9o361W29/x5VT+unLx/10HHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4e
Hh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHh4eHgcAEiF0HQ+R
5uZYLGY3cKEH+eQ6OzubXy2pAxD//e9///Of/1ieYyHyfUr1o4JzQTFV3swL
y8179+5Nepdb7ZnAXmr1X/CqdlNQ+qk3uG+0b4KckqB/KaPqR1VkP7nFz1fA
PAoRSUKuJna7rSGvFGg46zKWwi+//EITW1LWpkrK0i/EUiSJkztekRMy6QpV
oWfAw8PDwyMTmNIBqZzQJU4uuxBzsGvRCREJUzH7RLqKqGgu/h3CfhLzyZc/
S1vpU/pL5bLy5psH3Sy65er0fBVf0s1qI1eJF7BuLU01vVscqzQrphVfNWCi
oixxGzRDF1ZXSoo7YfK6TS/Kl8Z4FBxu45rgpYqQCZJZhcbQ+IY2hU8qQXuW
1lRbK2WTHOvymZhp+WbezZWu9TrLpF4kwTNRVOa9aHl4eHgUPzQOMybLiZTq
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
6U0VDw8Pj+KHOxcplQF9Yog+77zzfv/73//P//zP7373u/8nAtf6Up8HH3xw
1apV0S/PP//86tWrv/vuu5gTz9Bdo2WfSXNwykMiLfK6J+lL9189IrUybdq0
atWqkdWDDjqoVq1aaEAKaPzZVX/uhflbVCFPPvlkjRo1qIE//vGPsGi+ydC9
qdlhblu0aBFUvHz58r+PcNJJJ6G1k5a3WX7sX+g9+r1y5cqHHHIIT/F5xBFH
wNa2b98eFJhPWtNr5eSuXbtgzpRU7QtKlSrVtWtXuKsbAcCmON1wTAsWLKB6
lUnkhGf5Fy7qeq0lHvEo4Exqk+UqKrkKQGqT2T1J36Q+npS+K6V5SVdeb89V
8FJvTv03Nf+5vmK/oUTMwShRh6RhxSDDaqDfhVC/FtTuGE1169Z94IEHsMW+
/fZbW80ShP7JO+64A9OM3gSfpHMlommIeG6n5CQiozLzcuk2KCJksmzZstZf
kkYhG4L+8Ic/wDaHDRuGYQvdtcW6uTZrYVWvh4eHh0cqbIyVkwpaCJ88++yz
s7KypGUOP/xwVAzU4tBDD4UwaBiXPuKbI4888k9/+tOFF17IkP6vf/3r559/
lv6y8HHm1LLQx3xjKwDjTkxsrRK0azfSY9I2ZFNe4mx2io0bSFPFmTFjRs2a
NSmC+OQbb7yhmfqkqXlb2qfsKeqI9A73Dxo06IwzzqBCIIRPPfXUjh07jBql
r1ujK8uWLbvtttvKlCkjTkhmjjrqqC5duqxbt86S0trUeLRSUZttP/vss1at
WnG/qVQebNOmDXkICsYn3aYXn/znP//5t7/97fTTT1fT80bee9lll02YMEGu
KrWmxQsyHy9VNHLkyGOOOYb7eZDHEY8///nPr7/+uuvPNKdukhPbCI/JjFUI
70pEfidbvZlwjk1xOYO7qjOesnFDMQxVUpM6vvn3v//txvY0LhRzYn5qYZ5t
Q1OCtinJlWe1pjazxJw98krEXSTg5t+SStroVJCWtQubetiwYcO9995Lh0WK
6Ln04tKlS6tTq1+XikB/4bb69euPHj36hx9+UM0HIZ9s165dhQoVaOJjjz12
8uTJMSfGVBAJvAUf4HsYqbio28XSZ55E3n333caNGx922GG8iNySPbJExvhG
OQdc8w2/8hOZYciCLdNfbLGxXuSKjeeTHh4eHkWHJD75/fffP//88+eccw4j
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
9fnnn2OVYNzpmGxbMSJqFOS0+Fy5svZFMDDeteXtzDPPdPmk+eQTzlEyJhuW
AjIGn1QH1PpVOdLNq6mn+HL58uWwdBmY1B6V6aaD/l27di0FQWDIFS1u/li9
VHxSMdUZWyZPnqxgUBZEVBaECk7lLFy4sEOHDscff7yUFNoQrqto/MqYmCc9
lzdSezQ6zSQTUkIob/MBy1t+G8h2Vk1nRydmmpjZwBtEi9itO9vamAMNhcsn
3WTNekJKjQrmugQRTqihLK8qSsMnr7vuuqTpaQt9qcn0zF2UejvjJKU2dqo0
n3jiCfq4ZvALyz954YUXMs506dIlKed8QguDKJxghjlPhEHqFGXFzXn79u2/
++67888/3/PJTJDKJ6m90aNHy9+CNocFaQVIkJO9xMNgdLNnz3700UevueYa
MaVDDz0UIqrzayCNEgbYqYJD0tatWrUiNTuuzpwwdId33323RYsW8uCdffbZ
KDuzj8zzxlOo1CuuuKJ06dLcCaNAWaOp0eP9+vWDBlgwQysOfLJu3boKFWic
k58o5rhx42AmSHXZsmWRajiw+SusmGRs+vTpdDdexJ1UyODBgyG6tgou37pV
TiAMsCltMJF/0o4yT20L+9e+UW4RYKSdqhafTEQ7oVTSqVOnQkXg2DfccAND
B1zLZvAzbHoadNiwYTCNrNA/CZ/Ufhx5k1Q58ei4Z/NoaRyIhae0Uy53P47O
x9FUOK3z4osv0lK0BZSybdu2ECSXh9grdGijJAoKbcf0AJ3P4vonFVdQiVhq
ImDaBQZRhJYw+LzwwgvymSeiPchkgFpFJpFPraQlzzbfzUXt2rUVAeCiiy4y
v2UimpRXIrRst27dtMBGp0Nu2rQpEcWf1Pk4WWH8yYkTJ/4cwrUXlBrsy/yT
jRo1mjZtmnZpqYYZNrGD+vbtS/tSvagPegd8TOs8bZuzyZu1UZK1Iv+kZqu1
ftJGctcuMK5rXlygzGBz6fxu8Xna1xZmJJzd02RpxYoVmKLik9B1erf54YNo
jQFlgTQiCVgx27Zts8xzJ90WO0J8Ek2NbOeqHXg79U9tIDA0ogZ8MqaIo2La
GhP03tdffx0FKjuUVnvvvfdkzmQ7+3o8pSw6WCWr2s2kNXmLhYd1SqjcHm12
zYHWOkXEJy1xG3UffvjhrJSwsYq7yKdOjsjrLWn4JDqRn95++20jY8aX6La2
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
qfPOO69fv35z587dvn07NweRVaUh13WkaFbXPEuuRR843o9cyWQSn3S9T2Jr
vIvebbNdJVt75gxRGaVJ+RItHHfmyNx7TFH+GkfXQoTxH5tXjeVcSqEW17/2
vTl4g3AsMieV1bA9XsLFKxhc9xT9SJTSqsXYZjxlhcm+6oK8oJRlbKrfmdDG
nPloI3XyrekpsyWNd8WcaWszH/JCds65bON1upZIuMOFXHx6r+LyaTSzLRv7
xCr1ChvNzMZJhB5LeV9jzuJSQTTSXJoJxz8Zj6b7E9FUC/eQjt0Wd9zvqh+t
6nFtK3PL783jjJIDBNadZfhIYMyOzrfpD0AUKZ8084oqskO03VjQomRnnXUW
OjfIm9gUIp/cDxwgfHI/4PlkoUOjGSMYbafR2PghqmTt2rXDhg27+uqrK1eu
XKZMmQoVKtSvX3/gwIGrV6+GiGqU4Fnu1NCh1YMaPM1jmeRIjDkr1RNp4T4b
i2Y5Lc8lTsaSdKgpWZSFKiSIJuOsOPrUVPj/ZT4pmmSeGSMPRrZdB7jqWUyA
C8Z2s+i1Wcyq1/jV3qI5zLc4YV4so5R7c+7vMMGT4t4nL1y+cN9iFSvfo8v5
TaTtSyRfxlQiXNIgjicelTmpcCVBU9u2ZFRpKhFdq9RcMyLJvjA+6QpGzNm+
ke+reZzUoNMxZ2o77izpTDi7Gq0vc/9XX32V7ayOjkdLvrOd3UNufqxarDLN
lDC2LGvCSHXBG7fooNzGo/VIttpZ7W4991eEIuKTcWc3+tatW6+55pqkae6s
KEbQoYce+uabbwZ5H3cYeD65v/B8snCRRHLcaxsMd+3atWzZsiFDhtStW7dU
qVKlS5euVq3aDTfc8PzzzyNCZpjrKZn2Lj2Q6W0iEXemihLRfLGZ4S70pbti
001H41XJzv6YqpK6t+X3sWhy1uXM7ryP61AqwfyXLFw2Yrpe9ojqx3VtxZzV
kqncSbKnB00Rl3T5CgqK88MPP5hQUTSUmnY6xKJpZVE1WxvAuA0LKnjZZbsp
sl/MmUZ3129kO1vquFk0Uo1o893u/S7zzDeH6lPGCZNsT/PT2lodkw0TG7vf
/Jb/b3vvHrb1mPX/93yPYx5mMPMQ8gwz4yk1silUI6VSSIpQoYRSNiXShrQT
KlKpVLShoqFQkW0bFZGSTUUhMcVjz2Oex3x/v+93uq/d5/s6Pu/jXMe6r6v7
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
I1jYFWXCCn7RA37+eunKhL240hteY+Sc020QVK0yUVeTrEe5EAstC5mFRF7V
ZF1A2Itr3sU5bVwWLFhwyimn7LPPPkcdddSUKVOU6SIXXDDrqQ1rxJORIv1k
KesuT5G5t6Uow4SVvO4NkwWjSjWtavELjmbpTJEW6bpMmm1G67YeSBTSAJ1h
rUL5GItptoLbcecNhPfo8y7w5cOz3jJ6xVvmllnzwd/Pl9/jl4SlRlPO3hz4
UE9Rx2VWLKpj4DDv4mDWhkJ67smiiGbyDHXzqxLxVT52WRemy7uVsqLeWTgi
76Kp+fKRQDu95fmWDTsM7ctM+ZXKXFjL8+A8464dL5S/r81YUQjAT+0p2jPg
kaSZbGtVwQWgMiFRoSC6FxvfBsMDHrRYH4uWMktFKJuu8O5MzzsYpKx8YhbC
9S4eVVr3K39X3TFR0Sjr7LOVY0218fWzKRciaSar2RDptZb7QgrhMnHPgXw4
iVPkeZnA+xI8UK+8gyZytp3YxsWCsYk73GeYU8+Y2Nj8yjtQl3Vbx600scI2
QthjRTrQarGVHWNFweX58VLhEbgGyLhhuqiQajzbVJMtv8Vdu0qKqtOE8qgv
40Kafv7mS1x1m01//vOfLS/xgQce2L9//23btuXSFXMxTTPXuy2mXSNFivTT
pHz5dDeZcLzCQEUl75rGS9zhPjMZpbbDm+kiVZYNS9uFsIUy6/bneIXsPeKC
i/7ly68dJy4zTxJiKYaLzBPPuTXrJFgrs+Pmv5sV9nbTF5UL60oWSZDJKzK7
uRAFMobn3f2/VmzBIStjdc6FwswWmEE0xGWrxpWPuzHHW/mikv3Y+SE2o1b0
sIcfxhA/Rsa0nAts5sLCn/cRbF3Pv54pf7JYr3uRKAW0BRefLMI8HgYU4Ukv
4WaITXg8rwrlt/PlnfdR1KRCeURd+egUQpTPD/1ujqy1yrfQOm7OV9FkNDKe
6yeLSebTA2UKjpmcG/Pt+Vz5Dcm+WEEOP9eMsf6byjtYCPmCjKt2fqQIbxcC
JtdnOz/uZ2u+/NmrMndYyUTd9nJ7MfC1+PG1KWDj7l/JO9zuKyryXPLuEJOX
ImuwULr/MucOwRUhVZOiMpfBwGNIKyEXdkEk6VX13bp1a9y4cZ06ddq1a/fK
K69kXRDew90kbJcypkWKFOknS14P5B0+rFK3JxXfvVKkZku/LKVc+ZCO/8na
41tbKA9yvFq2Zlj7fV+sa0VV2K9FsMRX58tPHN6wb+zdXFh3K2WLN0mlzS56
uKJvijjs663cCyhiSBEb/bAWnMkoalu+vB9RNAoVtbPomyJo4cfXfvLt8d1M
yud7KWpDUiJvu+yy706VrlNF/5Z2ragvRRUVsboiKuKwt/hVvlvUqqJJXaiU
iprtByLrltq9l+FrrLKoXT6/y2ZXREWg0ZyXXRblG2w4regZz6gijVcov8e7
8rYVjVdpj4r6XvRiRZ+Las87SnbFdl+CZ7gfyoqGyVoOin7ttdfWprRp0yaf
Vq7UKFQ5fSJFihQpUqRIkSJFqhLnR4oUKVKkSJEiRYrkKefo+25LpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWKFClSpEiRIkWK
FClSpEiRIkWKFCnSPxP9PwdD4bE=
    "], {{0, 178.}, {880., 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag[
   "Byte", ColorSpace -> "RGB", Interleaving -> True, MetaInformation -> 
    Association[
     "Exif" -> Association[
       "NewSubfileType" -> "Full-resolution Image", "ImageWidth" -> 1218, 
        "ImageLength" -> 246, "BitsPerSample" -> {8, 8, 8}, "Compression" -> 
        "Uncompressed", "PhotometricInterpretation" -> "RGB", "DocumentName" -> 
        "E:\\OneDrive\\code\\github\\ICardiodLise\\dmmdblharpoon.tif", 
        "ImageDescription" -> "Created with GIMP", 
        "StripOffsets" -> {8, 467720}, "Orientation" -> 
        Association["CameraTopOrientation" -> Top, "Mirrored" -> False], 
        "SamplesPerPixel" -> 3, "RowsPerStrip" -> 128, 
        "StripByteCounts" -> {467712, 431172}, "XResolution" -> 300, 
        "YResolution" -> 300, "PlanarConfiguration" -> "Chunky", 
        "ResolutionUnit" -> "Inch", "SubIFDs" -> "938412", 
        "SampleFormat" -> {"Unsigned", "Unsigned", "Unsigned"}]]],
   Selectable->False],
  DefaultBaseStyle->"ImageGraphics",
  ImageSize->{431.55000000000007`, Automatic},
  ImageSizeRaw->{880., 178.},
  PlotRange->{{0, 880.}, {0, 178.}}]], "Output",
 CellChangeTimes->{3.8009896112672367`*^9, 3.800990913821066*^9},
 CellLabel->"Out[38]=",ExpressionUUID->"581dcbbf-f916-417e-a0c1-28032eee5074"],

Cell[CellGroupData[{

Cell["I Cardiod Lise Arc - en - Ciel", "Title",
 CellChangeTimes->{{3.664451747038518*^9, 3.664451747041587*^9}, 
   3.801000202039857*^9, 3.8010002500640087`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"12af2807-2012-488e-ad69-354670a3e683"],

Cell[TextData[StyleBox["This notebook has been created with Mathematica \
Commercial License L3302-6545 . ",
 FontSlant->"Italic",
 FontColor->RGBColor[1, 0, 1]]], "Text",
 CellChangeTimes->{{3.799958787694915*^9, 3.799958917176119*^9}, {
  3.799959159335161*^9, 3.799959296183918*^9}, {3.799962639485429*^9, 
  3.7999626852427797`*^9}, {3.799962798917831*^9, 3.799962800990922*^9}, {
  3.800293824579274*^9, 3.800293865820447*^9}},
 TextAlignment->Right,ExpressionUUID->"fb155e44-c202-4420-be89-41e0435def95"],

Cell["\<\
June 12, 2020

Copyright (c) David M. Morgan, Ph.D.
GNU General Public License, v. 3.0 or later

Antigonish Landing, NS B2G 2L2 Canada
dmmorgan@gmail.com
(902) 318-4906\
\>", "Text",
 CellChangeTimes->{{3.7999628047731113`*^9, 3.79996281342213*^9}, {
  3.799962866758527*^9, 3.7999628956860027`*^9}, {3.8002938530727587`*^9, 
  3.8002938711634073`*^9}, {3.800293909924945*^9, 3.8002944345050583`*^9}, {
  3.8003134957690477`*^9, 3.800313604548006*^9}, {3.8003136433575687`*^9, 
  3.8003136502424507`*^9}, {3.800313680738512*^9, 3.800313933550432*^9}, {
  3.80031396556758*^9, 3.800314054692861*^9}, {3.800314164846736*^9, 
  3.800314167918345*^9}, {3.800808025466436*^9, 3.8008080660530453`*^9}, {
  3.8009988805691853`*^9, 
  3.800998885912978*^9}},ExpressionUUID->"e716296f-5115-4bb8-ac61-\
b17aba2dd6ef"],

Cell["\<\
Lise is the love of my life: a librarian, brilliant! - creative, beautiful; \
the mother of my two astonishingly well-adjusted children Stella and Mischa \
Brin-Morgan.  We are also splitting up. 

I first worked this up for her as a Valentine\[CloseCurlyQuote]s Day card in \
2016, although it was in Black & White - which is all my printer was capable \
of. But also because it took me until the 17th to get a rainbow version built \
with Hue[]. Here I experiment with a variety of colour schemes. \
\>", "Text",
 CellChangeTimes->{{3.800049655797071*^9, 3.8000496590615063`*^9}, {
   3.8000496906245403`*^9, 3.8000498292111*^9}, {3.800049912252818*^9, 
   3.800049952103775*^9}, {3.800052778912959*^9, 3.800052779717979*^9}, 
   3.800314251582643*^9, {3.800807994410877*^9, 3.800808000533897*^9}, {
   3.800920051606879*^9, 3.8009201384376793`*^9}, {3.800987821905717*^9, 
   3.800987843820479*^9}, {3.8009879268520184`*^9, 3.800987930785994*^9}, {
   3.800988309456491*^9, 3.80098834055094*^9}, {3.8009883927002087`*^9, 
   3.800988484128707*^9}, {3.8009993867836227`*^9, 
   3.800999398900276*^9}},ExpressionUUID->"0badca09-b4d7-4f2c-ba54-\
c58f8f8bd565"],

Cell[TextData[StyleBox["Algorithm: ", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.799879547156506*^9, 
  3.799879558304983*^9}},ExpressionUUID->"5fdb4a58-f26d-4afb-a33d-\
e253ba1a3690"],

Cell["\<\
From:

http://mathworld.wolfram.com/Cardioid.html

The cardioid may also be generated as follows. Draw a circle C and fix a \
point A on it. Now draw a set of circles centered on the \tcircumference of C \
and passing through A. The envelope of these circles is then a cardioid \
(Pedoe 1995). \
\>", "Text",
 CellChangeTimes->{
  3.664451781564311*^9, {3.664451936185203*^9, 3.664451942698794*^9}, {
   3.80092019033823*^9, 3.800920196361998*^9}, {3.8009885161210003`*^9, 
   3.8009885379992847`*^9}},ExpressionUUID->"009818b8-cb52-4c89-9ab0-\
2846c42ee3fe"],

Cell[TextData[StyleBox["Code:", "Subsubsection"]], "Text",
 CellChangeTimes->{{3.800050154457774*^9, 3.8000501567527103`*^9}, 
   3.800050198446967*^9},ExpressionUUID->"b4e82415-78ba-44fe-b47f-\
9f46831a9e33"],

Cell["Define the circle C and an arbitrary point A:", "Text",
 CellChangeTimes->{{3.800988558888976*^9, 3.800988573285234*^9}, {
  3.800988607276038*^9, 
  3.8009886144357843`*^9}},ExpressionUUID->"e81a7626-1195-49a6-9681-\
c71b614d87c4"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"CircleCPoints", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"Cos", "[", 
        RowBox[{"2", " ", "Pi", " ", 
         RowBox[{"i", " ", "/", " ", "39"}]}], "]"}], ",", " ", 
       RowBox[{"Sin", "[", 
        RowBox[{"2", " ", "Pi", " ", 
         RowBox[{"i", " ", "/", " ", "39"}]}], "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", "1", ",", " ", "39"}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"PointA", " ", "=", " ", 
  RowBox[{"{", 
   RowBox[{"0", ",", "1"}], "}"}]}]}], "Input",
 CellChangeTimes->{{3.664706635354212*^9, 3.6647066425304193`*^9}, {
  3.664706675809968*^9, 3.664706783496189*^9}, {3.66470703308554*^9, 
  3.664707037335726*^9}, {3.66470709287532*^9, 3.664707093576527*^9}},
 CellLabel->"In[58]:=",ExpressionUUID->"3b09a906-9345-40c0-9956-059bdfe0baaf"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "39"], "]"}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "39"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"4", " ", "\[Pi]"}], "39"], "]"}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"4", " ", "\[Pi]"}], "39"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"8", " ", "\[Pi]"}], "39"], "]"}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"8", " ", "\[Pi]"}], "39"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"19", " ", "\[Pi]"}], "78"], "]"}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"19", " ", "\[Pi]"}], "78"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"5", " ", "\[Pi]"}], "26"], "]"}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"5", " ", "\[Pi]"}], "26"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"11", " ", "\[Pi]"}], "78"], "]"}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"11", " ", "\[Pi]"}], "78"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"7", " ", "\[Pi]"}], "78"], "]"}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"7", " ", "\[Pi]"}], "78"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "26"], "]"}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "26"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "78"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox["\[Pi]", "78"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "78"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"5", " ", "\[Pi]"}], "78"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "26"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "26"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     FractionBox[
      SqrtBox["3"], "2"]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"17", " ", "\[Pi]"}], "78"], "]"}]}], ",", 
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"17", " ", "\[Pi]"}], "78"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "13"], "]"}]}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"3", " ", "\[Pi]"}], "13"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "39"], "]"}]}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"7", " ", "\[Pi]"}], "39"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "39"], "]"}]}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"5", " ", "\[Pi]"}], "39"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "13"], "]"}]}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "13"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "39"], "]"}]}], ",", 
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "39"], "]"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "39"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "39"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "13"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "13"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "39"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "39"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "39"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "39"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "13"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "13"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"17", " ", "\[Pi]"}], "78"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"17", " ", "\[Pi]"}], "78"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      FractionBox["1", "2"]}], ",", 
     RowBox[{"-", 
      FractionBox[
       SqrtBox["3"], "2"]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "26"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"3", " ", "\[Pi]"}], "26"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "78"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "78"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox["\[Pi]", "78"], "]"}]}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "78"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox["\[Pi]", "26"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox["\[Pi]", "26"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"7", " ", "\[Pi]"}], "78"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"7", " ", "\[Pi]"}], "78"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"11", " ", "\[Pi]"}], "78"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"11", " ", "\[Pi]"}], "78"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"5", " ", "\[Pi]"}], "26"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"5", " ", "\[Pi]"}], "26"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Sin", "[", 
      FractionBox[
       RowBox[{"19", " ", "\[Pi]"}], "78"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Cos", "[", 
       FractionBox[
        RowBox[{"19", " ", "\[Pi]"}], "78"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"8", " ", "\[Pi]"}], "39"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"8", " ", "\[Pi]"}], "39"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"4", " ", "\[Pi]"}], "39"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"4", " ", "\[Pi]"}], "39"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "39"], "]"}], ",", 
     RowBox[{"-", 
      RowBox[{"Sin", "[", 
       FractionBox[
        RowBox[{"2", " ", "\[Pi]"}], "39"], "]"}]}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"1", ",", "0"}], "}"}]}], "}"}]], "Output",
 CellChangeTimes->{3.664706748592414*^9, 3.6647070981614943`*^9, 
  3.800921623503447*^9, 3.80098961142846*^9, 3.800990913976717*^9, 
  3.800999757433797*^9, 3.801000083571251*^9, 3.8010002397349*^9},
 CellLabel->"Out[58]=",ExpressionUUID->"7890d87d-2ed2-48d7-aa27-048db1aa841c"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"0", ",", "1"}], "}"}]], "Output",
 CellChangeTimes->{3.664706748592414*^9, 3.6647070981614943`*^9, 
  3.800921623503447*^9, 3.80098961142846*^9, 3.800990913976717*^9, 
  3.800999757433797*^9, 3.801000083571251*^9, 3.801000239743956*^9},
 CellLabel->"Out[59]=",ExpressionUUID->"593fe4f0-eba8-45eb-af85-e8a81e08b2bd"]
}, Open  ]],

Cell[TextData[{
 "For each point in CircleCPoints, construct a circle with that point as its \
centre such that it passes through A. In other words, each such circle must \
satisfy:\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["r", "2"], TraditionalForm]],ExpressionUUID->
  "e6a32ae2-9899-496b-a4cb-f499840459ac"],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"CircleCPoints", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], "+", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", 
       RowBox[{"CircleCPoints", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "2"]}], 
   TraditionalForm]],ExpressionUUID->"675e2465-ecd5-4dbe-b92a-5fd54c5bde3f"],
 "\n\nin which x and y take on the values of PointA[[1]] and PointA[[2]], \
respectively, and in which \n\n",
 StyleBox["r",
  FontSlant->"Italic"],
 "\n\nis the radius of the circle in question. \n\nFor each point in \
CircleCPoints, the radius of the required circle is:"
}], "Text",
 CellChangeTimes->{{3.6644039088763857`*^9, 3.6644039955963697`*^9}, {
   3.664404051413176*^9, 3.664404052775413*^9}, {3.6644041308086367`*^9, 
   3.6644042487267017`*^9}, {3.664404356243763*^9, 3.664404359137556*^9}, {
   3.664404412105042*^9, 3.664404421821315*^9}, {3.664404453426941*^9, 
   3.664404524742792*^9}, {3.664404572833673*^9, 3.66440459609604*^9}, {
   3.664407055336935*^9, 3.664407056345408*^9}, {3.664452028754304*^9, 
   3.664452029170211*^9}, {3.6644525288103733`*^9, 3.664452530147958*^9}, {
   3.664452595916754*^9, 3.664452599124144*^9}, 3.664452903321944*^9, 
   3.800988657962688*^9},ExpressionUUID->"c23fcd97-cc61-4132-8ae7-\
3a42c0fa6fb0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ConstructedCircleRadii", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Sqrt", "[", 
      RowBox[{
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PointA", "[", 
           RowBox[{"[", "1", "]"}], "]"}], " ", "-", " ", 
          RowBox[{"CircleCPoints", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], " ", "+", 
       " ", 
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          RowBox[{"PointA", "[", 
           RowBox[{"[", "2", "]"}], "]"}], " ", "-", " ", 
          RowBox[{"CircleCPoints", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "2"]}], "]"}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "CircleCPoints", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.801000372054275*^9},ExpressionUUID->"724ae6f5-946c-433c-8760-\
110306373cf5"],

Cell["Give the third result as an example: ", "Text",
 CellChangeTimes->{{3.801000321961815*^9, 
  3.8010003526551247`*^9}},ExpressionUUID->"607216d6-bbb3-41f3-b509-\
e0c23baea1f5"],

Cell[BoxData[
 RowBox[{"ConstructedCircleRadii", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.801000355044394*^9, 
  3.801000364364287*^9}},ExpressionUUID->"c60c1dbe-4e29-49ae-a190-\
12fb1bda9767"],

Cell[TextData[{
 "Formulate the equation for the upper hemisphere of each to be constructed \
circle in the form: \n\ny = ",
 StyleBox["f",
  FontSlant->"Italic"],
 "(x)\n\nRecalling that each circle satisfies:\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["r", "2"], TraditionalForm]],ExpressionUUID->
  "51357db8-1f8f-4eae-a711-334ce9fcdbca"],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"CircleCPoints", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], "+", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", 
       RowBox[{"CircleCPoints", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "2"]}], 
   TraditionalForm]],ExpressionUUID->"739bc722-479f-4a91-95f7-dfd3147c83d8"],
 ",     (1)\n\none rearranges to solve for y: \n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["r", "2"], TraditionalForm]],ExpressionUUID->
  "bd8cca1e-ddaa-4067-b4be-4711370557e3"],
 " - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"CircleCPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], 
   TraditionalForm]],ExpressionUUID->"3bc18e2e-801b-4ebd-b1b1-8858d588387c"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"y", "-", 
      RowBox[{"CircleCPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "2"], 
   TraditionalForm]],ExpressionUUID->"bb4e70e4-4442-4ff9-9e89-1bd0821f7930"],
 ".     (2)\n\nTaking square roots of each side provides:\n\n\.03",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     RowBox[{"\.16", 
      SuperscriptBox["r", "2"]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"CircleCPoints", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], " "}]], 
   TraditionalForm]],ExpressionUUID->"56bee4c1-f129-4c7e-992b-616ab0df1bc2"],
 " = ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"y", "-", 
     RowBox[{"CircleCPoints", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"8b8cfea0-a92c-4785-9fb0-0913d244ce26"],
 ",     (3)\n\nand solving for y gives:\n\ny = CircleCPoints[[i,2]] + ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     RowBox[{"\.16", 
      SuperscriptBox["r", "2"]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"CircleCPoints", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], " "}]], 
   TraditionalForm]],ExpressionUUID->"79f1073f-cf22-41fc-ac4d-e971fa7e1856"],
 ".    (4)\n\nConstruct the equations for the upper hemisphere of each circle:"
}], "Text",
 CellChangeTimes->{
  3.664451849167447*^9, {3.664452893944206*^9, 3.66445292292057*^9}, {
   3.6644531611417513`*^9, 3.664453318369356*^9}, {3.66445413974326*^9, 
   3.664454142243001*^9}, {3.664454269216544*^9, 3.6644542708832417`*^9}, {
   3.8009887973508043`*^9, 
   3.800988809884262*^9}},ExpressionUUID->"013c13c8-7b0a-4c4e-befb-\
0f250f808e5c"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpperHemisphereEquations", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"CircleCPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "+", " ", 
      RowBox[{"Sqrt", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ConstructedCircleRadii", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], " ", "-", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", " ", "-", " ", 
           RowBox[{"CircleCPoints", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "^", "2"}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "CircleCPoints", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664404964776595*^9, 3.6644049790199823`*^9}, {
  3.6644059480812807`*^9, 3.664406023887744*^9}, {3.664406449943812*^9, 
  3.664406561270719*^9}, {3.6644072264089518`*^9, 3.664407370697721*^9}, {
  3.6644529549665823`*^9, 3.664452979861712*^9}, {3.664453013256871*^9, 
  3.6644530973258047`*^9}, {3.664453128802446*^9, 3.664453136299624*^9}, {
  3.6644533387605257`*^9, 3.6644534133148317`*^9}, {3.664453492554817*^9, 
  3.664453493922789*^9}, {3.6644535397660933`*^9, 3.664453540028821*^9}, {
  3.664454153615095*^9, 3.664454155134597*^9}, {3.664707431637315*^9, 
  3.664707451143943*^9}},
 CellLabel->"In[61]:=",ExpressionUUID->"c1ad11c2-c205-4af1-a735-bc01fa227995"],

Cell["Give the third result as an example. ", "Text",
 CellChangeTimes->{
  3.664451870751995*^9, {3.801000394778927*^9, 
   3.801000401534892*^9}},ExpressionUUID->"564cd963-9c26-4cdb-bb48-\
83f7d2c59af5"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UpperHemisphereEquations", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellLabel->"In[62]:=",ExpressionUUID->"fd07e185-b4f9-4ef1-b81c-a3aedad1f1d0"],

Cell[BoxData[
 RowBox[{
  SqrtBox[
   RowBox[{
    RowBox[{"-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"Cos", "[", 
         FractionBox[
          RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}]}], ")"}], "2"]}], "+", 
    SuperscriptBox[
     RowBox[{"Cos", "[", 
      FractionBox[
       RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}], "2"], "+", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"Sin", "[", 
        FractionBox[
         RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}]}], ")"}], "2"]}]], "+", 
  RowBox[{"Sin", "[", 
   FractionBox[
    RowBox[{"2", " ", "\[Pi]"}], "13"], "]"}]}]], "Output",
 CellChangeTimes->{{3.6644519096661158`*^9, 3.664451920627802*^9}, 
   3.6644534647023163`*^9, {3.664453544561142*^9, 3.6644535594215107`*^9}, 
   3.664455007039646*^9, 3.6644553625414867`*^9, 3.664539059032404*^9, 
   3.664707455309214*^9, 3.800921623618259*^9, 3.800989611577833*^9, 
   3.800990914100164*^9, 3.800999757596003*^9, 3.801000083751539*^9, 
   3.801000239943981*^9},
 CellLabel->"Out[62]=",ExpressionUUID->"a0231531-4cca-4674-9291-d54a84551b95"]
}, Open  ]],

Cell["\<\
Plot each upper hemisphere. Note the color formula in PlotStyle. Show the \
third in the list as an example. \
\>", "Text",
 CellChangeTimes->{{3.664406121940981*^9, 3.66440615288902*^9}, {
  3.664453693598275*^9, 3.6644536953963346`*^9}, {3.800999683699616*^9, 
  3.800999728139462*^9}},ExpressionUUID->"1c4523f4-e99d-44a7-ba22-\
09000cc25605"],

Cell[BoxData[
 RowBox[{
  RowBox[{"UpperHemispherePlots", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"UpperHemisphereEquations", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"x", ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"ConstructedCircleRadii", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "+", " ", 
          RowBox[{"CircleCPoints", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ConstructedCircleRadii", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"CircleCPoints", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
        RowBox[{"Hue", "[", 
         RowBox[{
          RowBox[{"38", "/", "39"}], " ", "-", 
          RowBox[{"i", "/", "39"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "ConstructedCircleRadii", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.800999609492672*^9, 3.800999613024872*^9}, 
   3.800999658114208*^9, {3.800999733985709*^9, 3.800999741903215*^9}, {
   3.8009997934887457`*^9, 3.8009998208513937`*^9}},
 CellLabel->"In[63]:=",ExpressionUUID->"3554e558-a776-4805-aed1-0e2cdaa7a1eb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"UpperHemispherePlots", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.8009998972800303`*^9},
 CellLabel->"In[64]:=",ExpressionUUID->"dc258018-322e-40d3-9350-a2f50eba79ac"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {Hue[
       NCache[
        Rational[35, 39], 0.8974358974358975], 1, 1], AbsoluteThickness[1.6], 
      Opacity[1.], LineBox[CompressedData["
1:eJwd2Hc8le8bB3DrlJTRUIS+6JsoshKRLlFWohAKfUNGhSKlYVUaRENWhYzM
yJaVx0rDaMtKnOMMZ5uPdU6/u99f5/V+vc65nuec574/13UfJc9z9t5CAgIC
noICAn9fQ8+v8cmUbcN4tFLN4dZfMGaTHvRdpA2bSyXzBpaPgL2aargotxW7
e4P2+M2NEcAIlXf3DLZiouNGKbyREVAnGiee72jFrON15U5rjcLTpvfPX5S3
YuYHpayOXRqF5c8cXvaltWJ6O/edj6seBaLD6VaTC62YiiHdt3QLEey0prtD
TrRiI06Mlf4uRGhcFdlfYNWKtaz+Zu91lwgpbxO5UoqtWF65+frYUSLY6Ddv
Gu1qwa55yVDTIklQt/bgNunaFkz9VOrv0RwSqHB/6FnltGC7OmxdpN+RQLCQ
YVN+pQU7MujknyE2BjUbN1y7rtKC0QhHZSXujoEiP+CnUlQzxkzPUd/qQ4b4
gTni0bPNmE9+gnB3JBkWam6yY5yaMYPWYxLiT8jw49wTwqR6M8bXSd4Q8JEM
0m0xvtGVGJYguOvyejUK0GP0Fd/6NGHKpgee5/dRoN30kL6GcROWWkpuCGdR
4Pmip23S2iZsj+z8djkhKjgG3A/zbn6DrTvHe1axjQrYYXIfYeMbzPfkvYTw
K1RI3PD4kXl3A2aq1fUkQ4IGy0pzhTUzG7AWqRXi4so0CDWvvbjhQgPW98y6
0E6PBscv/jpGk2nAPscV3T7qSoN/vm1Vjj1Vj711IzZF5NKg6H5jRfdiLSY3
VL1HSHccmgmUb47barC0y6llTvp00EmfO2DMq8YuE9yXYeZ0yNm5snbL52pM
9bkKUdKJDre9tNJmL1Zjgf01z/1D6HCw5eqp1JYqTOqxSL9cGR16wyRnBl0q
sXOGxhEpmxnAnDJY73WnDJt9dSVrYIkB7dvWXrd0L8OeFxoXLlvBhDQPFkND
twxrPhPksUWaCckZZjcn3pRiBtmRIUYaTHA8Kj0gH/AK8w/H57vdmPCptfbO
hc6XWIHXPo3COiZ0pP8hKt7NwzKor/SFzrLAL3+jLi6UionSaJ77ytlg84f2
ZMA9BdtxzGqurp4Nms6vBZpqk7GoFQZ7trezYXaZY090YBKmk5EjPNfLhmif
+NNrBhKwjFaNKaMlNpgcFDBx9byHSeSkM0MPcKBxk4av4uIZjLVDQEDiGwfq
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
       "]]},
     Annotation[#, "Charting`Private`Tag$15208#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.800999898541864*^9, 3.8010001068144627`*^9, 
  3.8010002651127453`*^9},
 CellLabel->"Out[64]=",ExpressionUUID->"56715528-3ef9-4b7a-a601-85bb224daabc"]
}, Open  ]],

Cell[TextData[{
 "Construct the equations for the lower hemisphere of each circle:\n\n\
Recalling that each circle satisfies:\n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["r", "2"], TraditionalForm]],ExpressionUUID->
  "9dacb921-1b2e-4d06-b29d-7914069d26e8"],
 "=",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"x", "-", 
       RowBox[{"CircleCPoints", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], "+", " ", 
    SuperscriptBox[
     RowBox[{"(", 
      RowBox[{"y", "-", 
       RowBox[{"CircleCPoints", "[", 
        RowBox[{"[", 
         RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "2"]}], 
   TraditionalForm]],ExpressionUUID->"16387cdf-84ad-4902-acbc-820ae10d0aa9"],
 ",     (1)\n\none rearranges to solve for y: \n\n",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["r", "2"], TraditionalForm]],ExpressionUUID->
  "653591cf-1267-413a-b767-6ceb5f18a7b4"],
 " - ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"x", "-", 
      RowBox[{"CircleCPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], 
   TraditionalForm]],ExpressionUUID->"39138a6d-f00f-4990-a6d3-fb7ed8c557fb"],
 " = ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"y", "-", 
      RowBox[{"CircleCPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], "2"], 
   TraditionalForm]],ExpressionUUID->"cfab906b-8447-4323-a986-d6540cb0a185"],
 ".     (2)\n\nTaking square roots of each side, and, this time, taking the \
",
 StyleBox["negative ",
  FontSlant->"Italic"],
 "root of the right hand side,  provides:\n\n\.03",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     RowBox[{"\.16", 
      SuperscriptBox["r", "2"]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"CircleCPoints", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], " "}]], 
   TraditionalForm]],ExpressionUUID->"c2a6cf30-40eb-4a48-b72b-30f4f8ceeff4"],
 " = - ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{"y", "-", 
     RowBox[{"CircleCPoints", "[", 
      RowBox[{"[", 
       RowBox[{"i", ",", "2"}], "]"}], "]"}]}], ")"}], TraditionalForm]],
  ExpressionUUID->"681f6655-eb63-457f-833f-fe57e15a26de"],
 ",     (5)\n\nand solving for y gives:\n\ny = CircleCPoints[[i,2]] - ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    RowBox[{
     RowBox[{"\.16", 
      SuperscriptBox["r", "2"]}], "-", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"x", "-", 
        RowBox[{"CircleCPoints", "[", 
         RowBox[{"[", 
          RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "2"], " "}]], 
   TraditionalForm]],ExpressionUUID->"b6f4d9ed-e36f-4c79-8fe6-936401b2dfd5"],
 ".    (6)"
}], "Text",
 CellChangeTimes->{{3.664454189992281*^9, 3.66445422214314*^9}, {
  3.6644542824443617`*^9, 
  3.6644544434223013`*^9}},ExpressionUUID->"e8cb5653-14cf-43e5-a115-\
2e4825a66a9a"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LowerHemisphereEquations", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{
      RowBox[{"CircleCPoints", "[", 
       RowBox[{"[", 
        RowBox[{"i", ",", "2"}], "]"}], "]"}], " ", "-", " ", 
      "\[IndentingNewLine]", 
      RowBox[{"Sqrt", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{
         RowBox[{"ConstructedCircleRadii", "[", 
          RowBox[{"[", "i", "]"}], "]"}], "^", "2"}], " ", "-", " ", 
        "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"(", 
          RowBox[{"x", " ", "-", " ", 
           RowBox[{"CircleCPoints", "[", 
            RowBox[{"[", 
             RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ")"}], "^", "2"}]}], 
       "\[IndentingNewLine]", "]"}]}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "CircleCPoints", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.664454540690565*^9, 3.664454712466077*^9}, {
  3.664707537699292*^9, 3.6647075553123617`*^9}},
 CellLabel->"In[65]:=",ExpressionUUID->"629137aa-dcf1-45e8-998a-86ed286c86dd"],

Cell["\<\
Plot each lower hemisphere. Show the third in the list as an example. \
\>", "Text",
 CellChangeTimes->{{3.664454718511903*^9, 3.664454723639703*^9}, 
   3.801000050620645*^9},ExpressionUUID->"80fa5bf7-4b57-48b7-bcb9-\
455f7e66c9b3"],

Cell[BoxData[
 RowBox[{
  RowBox[{"LowerHemispherePlots", " ", "=", " ", 
   RowBox[{"Table", "[", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"Plot", "[", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"LowerHemisphereEquations", "[", 
        RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"{", "\[IndentingNewLine]", 
        RowBox[{"x", ",", " ", "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"ConstructedCircleRadii", "[", 
            RowBox[{"[", "i", "]"}], "]"}]}], " ", "+", " ", 
          RowBox[{"CircleCPoints", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"ConstructedCircleRadii", "[", 
           RowBox[{"[", "i", "]"}], "]"}], " ", "+", " ", 
          RowBox[{"CircleCPoints", "[", 
           RowBox[{"[", 
            RowBox[{"i", ",", "1"}], "]"}], "]"}]}]}], "\[IndentingNewLine]", 
        "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotStyle", " ", "\[Rule]", " ", 
        RowBox[{"Hue", "[", 
         RowBox[{
          RowBox[{"38", "/", "39"}], " ", "-", 
          RowBox[{"i", "/", "39"}]}], "]"}]}], ",", "\[IndentingNewLine]", 
       RowBox[{"PlotRange", " ", "\[Rule]", " ", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"-", "3"}], ",", "3"}], "}"}]}], "}"}]}]}], 
      "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
     RowBox[{"{", 
      RowBox[{"i", ",", " ", 
       RowBox[{"Length", "[", "ConstructedCircleRadii", "]"}]}], "}"}]}], 
    "\[IndentingNewLine]", "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.6644547769388866`*^9, 3.664454778325263*^9}, {
  3.664454932822843*^9, 3.66445495548847*^9}, {3.6644550569190683`*^9, 
  3.664455062205963*^9}, {3.6644553285355167`*^9, 3.664455334482565*^9}, {
  3.8009999297959127`*^9, 3.800999932815391*^9}, {3.8009999762997837`*^9, 
  3.800999977957872*^9}, {3.8010000592024317`*^9, 3.801000060527335*^9}},
 CellLabel->"In[66]:=",ExpressionUUID->"41c5b767-1626-4ff0-bb2c-8610c8cff604"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"LowerHemispherePlots", "[", 
  RowBox[{"[", "3", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.801000064965032*^9, 3.801000070323798*^9}},
 CellLabel->"In[67]:=",ExpressionUUID->"961d8c4d-58b8-40a6-a634-6bed61cd4a5c"],

Cell[BoxData[
 GraphicsBox[{{{}, {}, 
    TagBox[
     {Hue[
       NCache[
        Rational[35, 39], 0.8974358974358975], 1, 1], AbsoluteThickness[1.6], 
      Opacity[1.], LineBox[CompressedData["
1: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
uvb/74P/Dxo6xKs=
       "]]},
     Annotation[#, "Charting`Private`Tag$16847#1"]& ]}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  ImagePadding->All,
  Method->{
   "DefaultBoundaryStyle" -> Automatic, 
    "DefaultGraphicsInteraction" -> {
     "Version" -> 1.2, "TrackMousePosition" -> {True, False}, 
      "Effects" -> {
       "Highlight" -> {"ratio" -> 2}, "HighlightPoint" -> {"ratio" -> 2}, 
        "Droplines" -> {
         "freeformCursorMode" -> True, 
          "placement" -> {"x" -> "All", "y" -> "None"}}}}, "DefaultMeshStyle" -> 
    AbsolutePointSize[6], "ScalingFunctions" -> None, 
    "CoordinatesToolOptions" -> {"DisplayFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& ), "CopiedValueFunction" -> ({
        (Identity[#]& )[
         Part[#, 1]], 
        (Identity[#]& )[
         Part[#, 2]]}& )}},
  PlotRange->{{-3, 3}, {-3, 3}},
  PlotRangeClipping->True,
  PlotRangePadding->{{0, 0}, {0, 0}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{3.801000130395769*^9, 3.801000290301797*^9},
 CellLabel->"Out[67]=",ExpressionUUID->"bddd5ae0-9bae-42d5-8aee-7904fab144af"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"ConstructedCirclePlots", " ", "=", " ", "\[IndentingNewLine]", 
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Show", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"UpperHemispherePlots", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"LowerHemispherePlots", "[", 
         RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"AspectRatio", " ", "\[Rule]", " ", "1"}]}], 
       "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "UpperHemispherePlots", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{"CardiodPlot", " ", "=", " ", 
  RowBox[{"Show", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Table", "[", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"ConstructedCirclePlots", "[", 
       RowBox[{"[", "i", "]"}], "]"}], ",", "\[IndentingNewLine]", 
      RowBox[{"{", 
       RowBox[{"i", ",", " ", 
        RowBox[{"Length", "[", "ConstructedCirclePlots", "]"}]}], "}"}]}], 
     "\[IndentingNewLine]", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Axes", " ", "\[Rule]", " ", "False"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{"ImageSize", " ", "\[Rule]", " ", 
     RowBox[{"{", 
      RowBox[{
       RowBox[{"12", " ", "72"}], ",", " ", 
       RowBox[{"12", " ", "72"}]}], "}"}]}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.664455081471488*^9, 3.66445528049017*^9}, 
   3.801000175979663*^9},
 CellLabel->"In[68]:=",ExpressionUUID->"03b2c433-f459-4fb3-a276-e920a0685343"]
}, Open  ]]
},
WindowSize->{955.5, 680.25},
WindowMargins->{{2.25, Automatic}, {2.25, Automatic}},
PrintingCopies->1,
PrintingPageRange->{Automatic, Automatic},
PrintingOptions->{"PaperOrientation"->"Portrait",
"PaperSize"->{Automatic, Automatic},
"PostScriptOutputFile"->"/home/david/print.pdf"},
FrontEndVersion->"12.1 for Linux x86 (64-bit) (March 18, 2020)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"f0f371bc-651d-47b1-8dc1-c40655e0349f"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 72998, 1201, 104, "Output",ExpressionUUID->"581dcbbf-f916-417e-a0c1-28032eee5074"],
Cell[CellGroupData[{
Cell[73581, 1225, 242, 3, 98, "Title",ExpressionUUID->"12af2807-2012-488e-ad69-354670a3e683"],
Cell[73826, 1230, 510, 8, 35, "Text",ExpressionUUID->"fb155e44-c202-4420-be89-41e0435def95"],
Cell[74339, 1240, 817, 19, 196, "Text",ExpressionUUID->"e716296f-5115-4bb8-ac61-b17aba2dd6ef"],
Cell[75159, 1261, 1170, 19, 127, "Text",ExpressionUUID->"0badca09-b4d7-4f2c-ba54-c58f8f8bd565"],
Cell[76332, 1282, 190, 3, 40, "Text",ExpressionUUID->"5fdb4a58-f26d-4afb-a33d-e253ba1a3690"],
Cell[76525, 1287, 569, 14, 150, "Text",ExpressionUUID->"009818b8-cb52-4c89-9ab0-2846c42ee3fe"],
Cell[77097, 1303, 209, 3, 40, "Text",ExpressionUUID->"b4e82415-78ba-44fe-b47f-9f46831a9e33"],
Cell[77309, 1308, 238, 4, 35, "Text",ExpressionUUID->"e81a7626-1195-49a6-9681-c71b614d87c4"],
Cell[CellGroupData[{
Cell[77572, 1316, 1015, 24, 139, "Input",ExpressionUUID->"3b09a906-9345-40c0-9956-059bdfe0baaf"],
Cell[78590, 1342, 9799, 329, 356, "Output",ExpressionUUID->"7890d87d-2ed2-48d7-aa27-048db1aa841c"],
Cell[88392, 1673, 355, 6, 33, "Output",ExpressionUUID->"593fe4f0-eba8-45eb-af85-e8a81e08b2bd"]
}, Open  ]],
Cell[88762, 1682, 1784, 41, 288, "Text",ExpressionUUID->"c23fcd97-cc61-4132-8ae7-3a42c0fa6fb0"],
Cell[90549, 1725, 1093, 31, 97, "Input",ExpressionUUID->"724ae6f5-946c-433c-8760-110306373cf5"],
Cell[91645, 1758, 181, 3, 35, "Text",ExpressionUUID->"607216d6-bbb3-41f3-b509-e0c23baea1f5"],
Cell[91829, 1763, 224, 5, 29, "Input",ExpressionUUID->"c60c1dbe-4e29-49ae-a190-12fb1bda9767"],
Cell[92056, 1770, 3267, 97, 504, "Text",ExpressionUUID->"013c13c8-7b0a-4c4e-befb-0f250f808e5c"],
Cell[95326, 1869, 1659, 35, 154, "Input",ExpressionUUID->"c1ad11c2-c205-4af1-a735-bc01fa227995"],
Cell[96988, 1906, 205, 4, 35, "Text",ExpressionUUID->"564cd963-9c26-4cdb-bb48-83f7d2c59af5"],
Cell[CellGroupData[{
Cell[97218, 1914, 179, 3, 29, "Input",ExpressionUUID->"fd07e185-b4f9-4ef1-b81c-a3aedad1f1d0"],
Cell[97400, 1919, 1134, 30, 53, "Output",ExpressionUUID->"a0231531-4cca-4674-9291-d54a84551b95"]
}, Open  ]],
Cell[98549, 1952, 355, 7, 35, "Text",ExpressionUUID->"1c4523f4-e99d-44a7-ba22-09000cc25605"],
Cell[98907, 1961, 2080, 48, 287, "Input",ExpressionUUID->"3554e558-a776-4805-aed1-0e2cdaa7a1eb"],
Cell[CellGroupData[{
Cell[101012, 2013, 219, 4, 29, "Input",ExpressionUUID->"dc258018-322e-40d3-9350-a2f50eba79ac"],
Cell[101234, 2019, 8874, 163, 247, "Output",ExpressionUUID->"56715528-3ef9-4b7a-a601-85bb224daabc"]
}, Open  ]],
Cell[110123, 2185, 3054, 95, 412, "Text",ExpressionUUID->"e8cb5653-14cf-43e5-a115-2e4825a66a9a"],
Cell[113180, 2282, 1194, 29, 174, "Input",ExpressionUUID->"629137aa-dcf1-45e8-998a-86ed286c86dd"],
Cell[114377, 2313, 243, 5, 35, "Text",ExpressionUUID->"80fa5bf7-4b57-48b7-bcb9-455f7e66c9b3"],
Cell[114623, 2320, 2253, 50, 287, "Input",ExpressionUUID->"41c5b767-1626-4ff0-bb2c-8610c8cff604"],
Cell[CellGroupData[{
Cell[116901, 2374, 241, 4, 29, "Input",ExpressionUUID->"961d8c4d-58b8-40a6-a634-6bed61cd4a5c"],
Cell[117145, 2380, 8927, 164, 247, "Output",ExpressionUUID->"bddd5ae0-9bae-42d5-8aee-7904fab144af"]
}, Open  ]],
Cell[126087, 2547, 1767, 40, 381, "Input",ExpressionUUID->"03b2c433-f459-4fb3-a276-e920a0685343"]
}, Open  ]]
}
]
*)

